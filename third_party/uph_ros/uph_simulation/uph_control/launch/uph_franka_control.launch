<?xml version="1.0" ?>
<launch>
  <arg name="robot_ip" default="172.16.0.2"/>
  <arg name="load_gripper" default="false" />
  <arg name="load_camera" default="true" />
  <arg name="load_remote" default="true" />
  <arg name="load_bottom_cameras" default="true" />

   <param name="robot_description" command="$(find xacro)xacro '$(find uph_description)/xacro/uph_franka_arm.urdf.xacro' --inorder "/>

  <include file="$(find franka_gripper)/launch/franka_gripper.launch" if="$(arg load_gripper)">
    <arg name="robot_ip" value="$(arg robot_ip)" />
  </include>

  <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
    <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" />
    <param name="robot_ip" value="$(arg robot_ip)" />
  </node>

  <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" />
  <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
    <param name="rate" value="1000"/>
  </node>
  <node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired, franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired] </rosparam>
    <param name="rate" value="1000"/>
    <remap from="/joint_states" to="/joint_states_desired" />
  </node>


  <!-- MOVE IT -->
  <include file="$(find panda_moveit_config)/launch/panda_moveit.launch" >
    <arg name="load_gripper" value="$(arg load_gripper)"/>
  </include> 

  <!-- RVIZ -->
  <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch" />

  <!-- camera -->
  <group if="$(arg load_camera)" >
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="serial_no"         value=""/>
      <arg name="json_file_path"    value=""/>
      <arg name="depth_width"       value="640"/>
      <arg name="depth_height"      value="480"/>
      <arg name="depth_fps"         value="30"/>
      <arg name="color_width"       value="640"/>
      <arg name="color_height"      value="480"/>
      <arg name="color_fps"         value="30"/>
      <arg name="enable_depth"      value="true"/>
      <arg name="enable_color"      value="true"/>
      <arg name="enable_infra1"     value="false"/>
      <arg name="enable_infra2"     value="false"/>
      <arg name="enable_fisheye"    value="false"/>
      <arg name="enable_gyro"       value="false"/>
      <arg name="enable_accel"      value="false"/>
      <arg name="enable_pointcloud" value="true"/>
      <arg name="enable_sync"       value="true"/>
      <arg name="tf_prefix"         value="top_camera"/>
      <arg name="align_depth"         default="true"/>
    </include>
  </group>

  <!-- to allow remote connection -->
  <group if="$(arg load_remote)">
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>
  </group>

</launch>
